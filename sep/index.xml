<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SEPs on</title><link>https://a.braml.eu/sep/</link><description>Recent content in SEPs on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://a.braml.eu/sep/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-Build-Systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-Build-Systems/</guid><description>[[IEEE Tools for dein SEP]]
Ant / Ivy Nicht nutzen Gradle Build-System mit Groovy oder Kotlin definierbar Schwerer zu lernen, aber sehr mächtig Maven Empfohlen Schnell zu lernen, aber sehr mächtig Vergleich der Systeme Eher theoretischer Vergleich Praktischer Vergleich jsfdemo von Stephan Lykascyk auf FIM Git</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-Continous-Integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-Continous-Integration/</guid><description>[[IEEE Tools for dein SEP]]
Jenkins Self-hosted Aufwendige Einrichtung Travis CI Github Workflows CI und CD möglich GitLab Checkstyle auf CI laufen lassen</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-IntelliJ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-IntelliJ/</guid><description>[[IEEE Tools for dein SEP]]
Praktische IntelliJ Plugins .ignore für .gitignore Dateien CheckStyle Material Theme UI? Mike&amp;rsquo;s IDEA Extension Rainbow Brackets RegExp Tester SpotBugs Statistic Code with Me für Live-Kollaborationen cloc für lines of code</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-Issue-Tracker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-Issue-Tracker/</guid><description>[[IEEE Tools for dein SEP]]
Tools GitHub GitLab Jira Trello Issue Tracker auf jeden Fall nutzen Issue Tracking kann auch beim Schreiben von Implementierungsbericht helfen Durch API automatisch generierbar</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-LaTeX/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-LaTeX/</guid><description>[[IEEE Tools for dein SEP]]
Nicht Word benutzen Jeder benutzt LaTeX Funktioniert gut mit Git, aber Overleaf empfohlen Fortgeschrittene Kenntnisse bei mindestens einem Mitglied Für Seminar- / Bachelorarbeit auch notwendig TeX-Studio Weitere Infos Overleaf Documentation Kapitel in eigene TeX-Datei auslagern und einbinden mit \input Glossar Einträge auch wichtig</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-Markdown/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-Markdown/</guid><description>[[IEEE Tools for dein SEP]]
Wenn LaTeX übertrieben ist, empfiehlt sich Markdown Pandoc für Export HedgeDoc Kollaborativer Markdown Editor Kann auch einfache Präsentationen bauen Instanz MkDocs Static Site Generator für Dokumentation Baut statische Websites aus Markdown</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-Testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-Testing/</guid><description>[[IEEE Tools for dein SEP]]
Offizielle Testphase vom SEP ist gegen Ende Unbedingt Software Testing VL hören Unit Testing Mutation Testing Nicht allzu viel Aufwand das einzubauen Aber grundsätzlich nicht notwendig Web App Testing Selenium Tools JUnit 5 AssertJ Hamcrest Mockito PowerMock PIT Selenium UML Diagramme Klassendiagramm IBM Rational-Software-Architect yatta UML Lab Unbedingt das nutzen, nicht IBM RSA IntelliJ IDEA Ultimate Edition ER-Diagramm, Sequenzdiagramm, GANTT-Diagramm, Pert-Chart, &amp;hellip; draw.</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-SEP-Tools-Versionsverwaltung-mit-Git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-SEP-Tools-Versionsverwaltung-mit-Git/</guid><description>[[IEEE Tools for dein SEP]]
Tools tig - History-Browser für Shell Meld - Diff- und Merge Tool GitKraken Git features blame cherry-pick worktree stash bisect Tipps push --force nur auf eigene Branches Nichts mergen was nicht kompiliert oder getestet wurde</description></item><item><title/><link>https://a.braml.eu/SEP/IEEE-Tools-for-dein-SEP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://a.braml.eu/SEP/IEEE-Tools-for-dein-SEP/</guid><description>[[SEP]]
Allgemein Infos zentral halten Agendas für Team Treffen Meetings protokollieren GitLab Handbook Kommunikation Einbinden von GitLab-Push-Benachrichtigungen (in Discord) Mattermost?</description></item></channel></rss>