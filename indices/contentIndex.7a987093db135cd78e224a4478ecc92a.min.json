{"/":{"title":"Alexander Braml","content":"\n# About Me\n\nI am a computer science student enrolled at the [University of Passau](https://www.uni-passau.de/), specializing in software development. My programming journey began a few years ago when I started working with an Arduino, exploring the realm of embedded systems. Over time, my focus shifted primarily towards Python, although I occasionally work with C++ as well. Additionally, I have experience working with Java.\n\n## What I'm currently working on\n\nCurrently, I am actively involved as a student assistant at the [Chair of Computer Engineering](https://www.fim.uni-passau.de/technische-informatik/). In this role, I am dedicated to developing a comprehensive test framework that enables automatic and reliable hardware testing.\n\nAdditionally, I have just commenced work on an exciting project with the objective of hacking a Eurobalise, a critical communication link connecting ground stations with trains. This endeavor serves as a notable component of my involvement in the [Digital Rail Summer School 2023](https://osm.hpi.de/drss/2023/) hosted by the Hasso Plattner Institut.\n\n## What I enjoy doing\n\nDuring my free time, I find joy in various activities. One of my favorite things is exploring the outdoors through mountain biking, often embarking on multi-day adventures when bikepacking. Additionally, I indulge in bouldering and enjoy the company of friends who share these passions.\n\nAnother fascination of mine lies in the world of cars and motorsports. I hold a special love for classic rallye cars, with a particular fondness for the iconic Audi Quattro.\n\nI am also an active firefighter, trained in wearing respiratory protection equipment.\n","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-Build-Systems":{"title":"IEEE SEP Tools Build-Systems","content":"[[IEEE Tools for dein SEP]]\n\n- Ant / Ivy\n\t- Nicht nutzen\n- Gradle\n\t- Build-System mit Groovy oder Kotlin definierbar\n\t- Schwerer zu lernen, aber sehr mächtig\n- [Maven](https://maven.apache.org/)\n\t- Empfohlen\n\t- Schnell zu lernen, aber sehr mächtig\n- Vergleich der Systeme\n\t- [Eher theoretischer Vergleich](https://www.baeldung.com/ant-maven-gradle)\n\t- [Praktischer Vergleich](https://github.com/nelenkov/android-backup-extractor)\n\t- jsfdemo von Stephan Lykascyk auf FIM Git","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-Continous-Integration":{"title":"IEEE SEP Tools Continous Integration","content":"[[IEEE Tools for dein SEP]]\n\n- Jenkins\n\t- Self-hosted\n\t- Aufwendige Einrichtung\n- Travis CI\n- Github Workflows\n\t- CI und CD möglich\n- GitLab\n- Checkstyle auf CI laufen lassen","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-IntelliJ":{"title":"IEEE SEP Tools IntelliJ","content":"[[IEEE Tools for dein SEP]]\n\n- Praktische IntelliJ Plugins\n\t- .ignore für `.gitignore` Dateien\n\t- CheckStyle\n\t- Material Theme UI?\n\t- Mike's IDEA Extension\n\t- Rainbow Brackets\n\t- RegExp Tester\n\t- SpotBugs\n\t- Statistic\n- Code with Me für Live-Kollaborationen\n- cloc für lines of code","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-Issue-Tracker":{"title":"IEEE SEP Tools Issue Tracker","content":"[[IEEE Tools for dein SEP]]\n\n- Tools\n\t- GitHub\n\t- GitLab\n\t- Jira\n\t- Trello\n- Issue Tracker auf jeden Fall nutzen\n- Issue Tracking kann auch beim Schreiben von Implementierungsbericht helfen\n\t- Durch API automatisch generierbar","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-LaTeX":{"title":"IEEE SEP Tools LaTeX","content":"[[IEEE Tools for dein SEP]]\n\n- Nicht Word benutzen\n- Jeder benutzt LaTeX\n- Funktioniert gut mit Git, aber Overleaf empfohlen\n- Fortgeschrittene Kenntnisse bei mindestens einem Mitglied\n- Für Seminar- / Bachelorarbeit auch notwendig\n- TeX-Studio\n- Weitere Infos\n\t- Overleaf Documentation\n- Kapitel in eigene TeX-Datei auslagern und einbinden mit `\\input`\n- Glossar Einträge auch wichtig","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-Markdown":{"title":"IEEE SEP Tools Markdown","content":"[[IEEE Tools for dein SEP]]\n\n- Wenn LaTeX übertrieben ist, empfiehlt sich Markdown\n- Pandoc für Export\n- HedgeDoc\n\t- Kollaborativer Markdown Editor\n\t- Kann auch einfache Präsentationen bauen\n\t- [Instanz](https://md.fachschaften.org)\n- MkDocs\n\t- Static Site Generator für Dokumentation\n\t  Baut statische Websites aus Markdown","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-Testing":{"title":"IEEE SEP Tools Testing","content":"[[IEEE Tools for dein SEP]]\n\n- Offizielle Testphase vom SEP ist gegen Ende\n\t- Unbedingt Software Testing VL hören\n- Unit Testing\n- Mutation Testing\n\t- Nicht allzu viel Aufwand das einzubauen\n\t- Aber grundsätzlich nicht notwendig\n- Web App Testing\n\t- Selenium\n- Tools\n\t- JUnit 5\n\t- AssertJ\n\t- Hamcrest\n\t- Mockito\n\t- PowerMock\n\t- PIT\n\t- Selenium\n- UML Diagramme\n\t- Klassendiagramm\n\t\t- IBM Rational-Software-Architect\n\t\t- **yatta UML Lab**\n\t\t\t- Unbedingt das nutzen, nicht IBM RSA\n\t\t- IntelliJ IDEA Ultimate Edition\n\t- ER-Diagramm, Sequenzdiagramm, GANTT-Diagramm, Pert-Chart, ...\n\t\t- draw.io\n\t\t\t- Bei Einbindung in LaTeX als PDF exportieren, dann automatische Skalierung\n\t\t- yED\n\t- Diagramme am besten gemeinsam am Beamer im Team erstellen\n\t\t- Bib-Räume\n\t\t- Seminarräume am Abend\n\t- Graphen erst ganz am Ende anordnen, nicht während der Arbeit\n- Test in CI sind am wichtigsten, da sie immer regelmäßig ausgeführt werden\n\t- Tests ignorieren ist keine Lösung","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-SEP-Tools-Versionsverwaltung-mit-Git":{"title":"IEEE SEP Tools Versionsverwaltung mit Git","content":"[[IEEE Tools for dein SEP]]\n\n- Tools\n\t- [tig](https://jonas.github.io/tig/) - History-Browser für Shell\n\t- Meld - Diff- und Merge Tool\n\t- GitKraken\n- Git features\n\t- `blame`\n\t- `cherry-pick`\n\t- `worktree`\n\t- `stash`\n\t- `bisect`\n- Tipps\n\t- `push --force` nur auf eigene Branches\n\t- Nichts mergen was nicht kompiliert oder getestet wurde","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]},"/SEP/IEEE-Tools-for-dein-SEP":{"title":"IEEE Tools for dein SEP","content":"[[SEP]]\n\n- Allgemein\n\t- Infos zentral halten\n\t- Agendas für Team Treffen\n\t- Meetings protokollieren\n\t- [GitLab Handbook](https://about.gitlab.com/handbook/)\n- Kommunikation\n\t- Einbinden von GitLab-Push-Benachrichtigungen (in Discord)\n\t- [Mattermost](https://mattermost.fim.uni-passau.de)?\n\t\t- Hier auch Webhooks / Integrationen möglich\n\t- Dateiablage (für größere Dateien)\n\t\t- Sync+Share vom LRZ\n\t\t- OneDrive\n- Notizen\n\t- HedgeDoc\n\t\t- Öffentliche Instanz: md.fachschafen.org\n\t- Wiki-Feature von GitLab\n- [[IEEE SEP Tools Versionsverwaltung mit Git]]\n- [[IEEE SEP Tools Issue Tracker]]\n- [[IEEE SEP Tools Build-Systems]]\n- [[IEEE SEP Tools Continous Integration]]\n- [[IEEE SEP Tools IntelliJ]]\n- [[IEEE SEP Tools Testing]]\n- [[IEEE SEP Tools LaTeX]]\n\t- SEP Dokumente von vergangenen Semestern holen\n- [[IEEE SEP Tools Markdown]]\n","lastmodified":"2023-07-13T19:47:36.4791784Z","tags":[]}}