{"/":{"title":"Alexander Braml","content":"\n# About Me\n\nI am a computer science student enrolled at the [University of Passau](https://www.uni-passau.de/), specializing in software development. My programming journey began a few years ago when I started working with an Arduino, exploring the realm of embedded systems. Over time, my focus shifted primarily towards Python, although I occasionally work with C++ as well. Additionally, I have experience working with Java.\n\n## What I'm currently working on\n\nCurrently, I am actively involved as a student assistant at the [Chair of Computer Engineering](https://www.fim.uni-passau.de/technische-informatik/). In this role, I am dedicated to developing a comprehensive test framework that enables automatic and reliable hardware testing.\n\nAdditionally, I have just commenced work on an exciting project with the objective of hacking a Eurobalise, a critical communication link connecting ground stations with trains. This endeavor serves as a notable component of my involvement in the [Digital Rail Summer School 2023](https://osm.hpi.de/drss/2023/) hosted by the Hasso Plattner Institut.\n\n## What I enjoy doing\n\nDuring my free time, I find joy in various activities. One of my favorite things is exploring the outdoors through mountain biking, often embarking on multi-day adventures when bikepacking. Additionally, I indulge in bouldering and enjoy the company of friends who share these passions.\n\nAnother fascination of mine lies in the world of cars and motorsports. I hold a special love for classic rallye cars, with a particular fondness for the iconic Audi Quattro.\n\nI am also an active firefighter, trained in wearing respiratory protection equipment.\n","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/FSK-Resources":{"title":"FSK Resources","content":"[[SDR Notes]]\n\n- https://wirelesspi.com/fsk-demodulation-in-gnu-radio/\n- https://wiki.gnuradio.org/index.php/Simulation_example:_FSK\n- https://www.tutorialspoint.com/digital_communication/digital_communication_frequency_shift_keying.htm\n- https://wiki.gnuradio.org/index.php/GFSK_Mod\n- https://www.rfwireless-world.com/Terminology/GFSK-vs-FSK.html\n- https://wiki.gnuradio.org/index.php/GFSK_Demod\n- https://wiki.gnuradio.org/index.php?title=File:USRP_RTTY_fg.png\n- LESEN\n\t- https://dsp.stackexchange.com/questions/83932/what-is-the-frequency-coming-out-of-vco-in-gnu-radio","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-AGC":{"title":"GRC AGC","content":"[[SDR Notes]]\n\n- Automatic Gain Control\n- Skaliert eingehende samples um ungefähr zwischen -1 und 1 zu legen","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Band-Reject-Filter":{"title":"GRC Band Reject Filter","content":"[[SDR Notes]]\n\n- Schmeißt wieder samples raus\n- Zwei cutoff Frequenzen: low und high\n- TODO: Was macht das sonst?","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Chunks-to-Symbols":{"title":"GRC Chunks to Symbols","content":"[[SDR Notes]]\n\n- Konvertiert einkommende samples in Symbole\n- symbol table muss spezifiziert werden und gibt an nach was übersetzt wird (quasi ein lookup table)","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Complex-to-Mag":{"title":"GRC Complex to Mag","content":"[[SDR Notes]]\n\n- Zieht sich die Magnitude vom Eingang heraus\n- Ist hoch wenn Amplitude hoch ist, niedrig wenn Amplitude bei 0","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Frequency-Xlating-FIR-Filter":{"title":"GRC Frequency Xlating FIR Filter","content":"[[SDR Notes]]\n\n- Performs a frequency translation on the signal (centers the signal)\n- Downsamples the signal\n","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Interpolating-FIR-Filter":{"title":"GRC Interpolating FIR Filter","content":"[[SDR Notes]]\n\n- Wenn ein sample reinkommt wird dieses mit `taps` multipliziert, d.h. z.B. bei taps = \\[10, 0, 0, 0, 0, 0, 0, 0, 0, 0\\] wird das einkommende sample mit 10 multipliziert und die 9 folgenden samples sind alle 0en\n- Die Länge dieses Vektors muss mit interpolation übereinstimmen\n- Natürlich verändert sich dadurch auch die sample rate","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Keep-1-in-N":{"title":"GRC Keep 1 in N","content":"[[SDR Notes]]\n\n- Behält nur 1 / N samples, schmeißt Rest raus","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Low-Pass-Filter":{"title":"GRC Low Pass Filter","content":"[[SDR Notes]]\n\n- Filtert Signal\n- Fokussiert sich auf Bereich von `center_freq - cutoff_freq` - `center_freq + cutoff_freq`\n\t- cutoff_freq muss man selbst herausfinden, gute Möglichkeit ist sich das im frequency sink anzuschauen und zu bestimmen\n- Transition width gibt an wie \"scharf\" abgeschnitten wird\n\t- Niedrigerer Wert bedeutet \"schärfere\" Abschneidung, allerdings dadurch mehr Rechenleistung benötigt\n\t- Guter Start-Wert: 50e6\n\t- Vorstellung:\n\t\t- Der Bereich um center_freq mit cutoff_freq bleibt immer drin\n\t\t- Bei center_freq +- cutoff_freq wird langsam abgeschnitten bis man bei center_freq +- cutoff_freq +- transition_width dann nur noch bei Noise ist\n- Decimation\n\t- Nach dem Filtern behalte nur `1/decimation` samples\n\t- Schmeißt Samples außerhalb der gewünschten Region weg\n\t- Achtung: Dadurch ändert sich die Sample Rate!\n\t\t- In den folgenden Blöcken anpassen\n\t\t- Kurze Notiz im Flow-Graph schadet auch nicht\n- Beispiel Flow-Graph\n\t- ![[Pasted image 20230622095924.png|500]]","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Quadrature-Demod":{"title":"GRC Quadrature Demod","content":"[[SDR Notes]]\n\n- Accepts a stream of complex signals and produces a stream of floats that represent a frequency demodulation\n- Useful for modulations that carry information through changes in frequency (like FM, [[Frequency Shift Keying]], FMSK)\n\nhttps://wiki.gnuradio.org/index.php/Quadrature_Demod\n","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Repeat":{"title":"GRC Repeat","content":"[[SDR Notes]]\n\n- Wiederholt jedes sample `interpolation` mal\n- Erhöht sample rate um das `interpolation`-fache","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-SDR-Bandedge-Filter-FFL-Band-Edge":{"title":"GRC SDR Bandedge Filter (FFL Band-Edge)","content":"[[SDR Notes]]\n\n- Sieht sich von einem Eingangsspektrum die Bandkanten an und versucht sie zu balancieren\n- ![[Pasted image 20230629082819.png]]","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-SDR-Frequency-Locked-Loop":{"title":"GRC SDR Frequency Locked Loop","content":"[[SDR Notes]]\n\n- ![[Pasted image 20230628152805.png]]\n- Um die empfangene Frequenz mittig um den Nullpunkt zu bringen nutzen wir einen [[GRC SDR Bandedge Filter (FFL Band-Edge)]]","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Threshold":{"title":"GRC Threshold","content":"[[SDR Notes]]\n\n- Gibt 1 aus, wenn sample über high threshold liegt\n- Gibt 0 aus, wenn sample unter low threshold liegt\n- Wenn der Wert dazwischen liegt wird anfang `initial_state` und danach der letzte Wert ausgegeben","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Throttle":{"title":"GRC Throttle","content":"[[SDR Notes]]\n\n- Nur benötigt wenn keine Hardware angeschlossen ist (Simulation)\n- Wenn Hardware im Flow-Graph ist, dann nicht verwenden!\n\t- Throttle könnte under- oder overflowen\n- Throttle Block kann überall sein, muss nicht unbedingt im Haupt Flow sein","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Unpacked-to-Packed":{"title":"GRC Unpacked to Packed","content":"[[SDR Notes]]\n\n- Verpackt bits zu bytes\n- Nimmt jeweils die ersten `bits per chunk` und verpackt sie zu einem byte\n- Durch Endianness wird angegeben ob das erste ankommende Bit das MSB oder LSB sein soll\n- Beispiel mit MSB:\n\t- ![[Pasted image 20230626142139.png]]\n","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-Vector-Source":{"title":"GRC Vector Source","content":"[[SDR Notes]]\n\n- Source die rausgibt was man ihr am Anfang übergibt","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/GRC-WBFM-Receive":{"title":"GRC WBFM Receive","content":"[[SDR Notes]]\n\n- Demoduliert gefiltertes Signal zu einem Audio-Signal\n- Quadrature Rate ist die eingehende sample_rate\n\t- hier aufpassen mit Decimation in vorherigen Blöcken\n- Audio Decimation ändert wieder die sample_rate\n\t- Audio Karte empfängt Daten mit 48 kHz\n\t- Also hier decimation so einstellen dass 48 kHz rauskommt","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/Learn-SDR-Course":{"title":"Learn SDR Course","content":"[[SDR Notes]]\n\n- Videos: https://www.youtube.com/playlist?list=PLywxmTaHNUNyKmgF70q8q3QHYIw_LFbrX\n- Ressourcen: https://gallicchio.github.io/learnSDR\n- Aktuell: `Learn SDR 17`\n","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/Micheal-Ossman-SDR-Course":{"title":"Micheal Ossman SDR Course","content":"[[SDR Notes]]\n\nAktuell: https://greatscottgadgets.com/sdr/6/\n","lastmodified":"2023-07-13T20:14:35.849154742Z","tags":[]},"/SDR/SDR-Aliasing":{"title":"SDR Aliasing","content":"[[SDR Notes]]\n\n- Man samplet zu langsam und bekommt ein sehr langsames Signal\n- Sample points werden quasi falsch interpretiert\n- ![[Pasted image 20230624121339.png|400]]","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Bandedge-Filter":{"title":"SDR Bandedge Filter (","content":"[[SDR Notes]]\n\n- Sieht sich von einem Eingangsspektrum die Bandkanten an und versucht sie zu balancieren\n- ","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Complex-Numbers":{"title":"SDR Complex Numbers","content":"[[SDR Notes]]\n\n- Screenshots von [[Learn SDR Course]], Video 03a\n\t- ![[Pasted image 20230622105925.png]]\n\t- ![[Pasted image 20230622105951.png]]\n\t- ![[Pasted image 20230622110010.png]]\n\t- ![[Pasted image 20230622110452.png]]\n- Screenshots von [[Learn SDR Course]], Video `Complex Mixing, Sampling, Fourier, ...`\n\t- ![[Pasted image 20230625070437.png]]","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Design":{"title":"SDR Design","content":"[[SDR Notes]]\n\n- Screenshots vom [[Learn SDR Course]]\n\t- ![[Pasted image 20230622151429.png]]\n\t- ![[Pasted image 20230622163229.png]]\n\t\t- Schema wird manchmal manchmal Quadrature Demodulation oder Zero-IF (Zero Intermediate Frequency)\n\t- ","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-FSK-Modulation-Approaches":{"title":"SDR FSK Modulation Approaches","content":"[[SDR Notes]]\n\n![[Different FSK Modulator Implementations]]\n![[Different FSK Demodulator Implementations]]\n\nSources: [[FSK Resources]]\n","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Notes":{"title":"SDR Notes","content":"[[Tech Notes]] | [[DRSS]]\n\n```dataview\nlist from [[]] and !outgoing([[]])\nSORT file.name ASC\n```\n","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Nyquist-ISI-Criterion":{"title":"SDR Nyquist ISI Criterion","content":"[[SDR Notes]]\n\n- Inter Symbol Interference\n- TODO","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Nyquist-Shannon-Theorem":{"title":"SDR Nyquist-Shannon-Theorem","content":"[[SDR Notes]]\n\n- Ein auf f\u003csub\u003emax\u003c/sub\u003e begrenztes Signal kann mit einer sample rate von größer als 2 \\* f\u003csub\u003emax\u003c/sub\u003e exakt rekonstruiert werden","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Quadrature-Phase-Shift-Keying":{"title":"SDR Quadrature Phase-Shift Keying","content":"[[SDR Notes]]\n\n- Screenshots aus [[Learn SDR Course]]\n\t- ![[Pasted image 20230626095058.png]]","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SDR/SDR-Raised-Cosine":{"title":"SDR Raised Cosine","content":"[[SDR Notes]]\n\n- ![[Pasted image 20230626133234.png]]\n- Gesamter Frequenzbereich ist 1\\*Alpha / T\u003csub\u003es\u003c/sub\u003e\n- Alpha ist ein Design-Parameter\n- Umso kleiner Alpha ist, umso näher ist man am absoluten Limit der Frequenz-Bandbreite\n- Umso größer Alpha ist, umso schöner sehen diese Pulse unten links aus und ermöglichen uns die Carrier Wave und das Timing der Pulse wiederherzustellen\n- Erfüllt [[SDR Nyquist ISI Criterion]]\n","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-Build-Systems":{"title":"IEEE SEP Tools Build-Systems","content":"[[IEEE Tools für dein SEP]]\n\n- Ant / Ivy\n\t- Nicht nutzen\n- Gradle\n\t- Build-System mit Groovy oder Kotlin definierbar\n\t- Schwerer zu lernen, aber sehr mächtig\n- [Maven](https://maven.apache.org/)\n\t- Empfohlen\n\t- Schnell zu lernen, aber sehr mächtig\n- Vergleich der Systeme\n\t- [Eher theoretischer Vergleich](https://www.baeldung.com/ant-maven-gradle)\n\t- [Praktischer Vergleich](https://github.com/nelenkov/android-backup-extractor)\n\t- jsfdemo von Stephan Lykascyk auf FIM Git","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-Continous-Integration":{"title":"IEEE SEP Tools Continous Integration","content":"[[IEEE Tools für dein SEP]]\n\n- Jenkins\n\t- Self-hosted\n\t- Aufwendige Einrichtung\n- Travis CI\n- Github Workflows\n\t- CI und CD möglich\n- GitLab\n- Checkstyle auf CI laufen lassen","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-IntelliJ":{"title":"IEEE SEP Tools IntelliJ","content":"[[IEEE Tools für dein SEP]]\n\n- Praktische IntelliJ Plugins\n\t- .ignore für `.gitignore` Dateien\n\t- CheckStyle\n\t- Material Theme UI?\n\t- Mike's IDEA Extension\n\t- Rainbow Brackets\n\t- RegExp Tester\n\t- SpotBugs\n\t- Statistic\n- Code with Me für Live-Kollaborationen\n- cloc für lines of code","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-Issue-Tracker":{"title":"IEEE SEP Tools Issue Tracker","content":"[[IEEE Tools für dein SEP]]\n\n- Tools\n\t- GitHub\n\t- GitLab\n\t- Jira\n\t- Trello\n- Issue Tracker auf jeden Fall nutzen\n- Issue Tracking kann auch beim Schreiben von Implementierungsbericht helfen\n\t- Durch API automatisch generierbar","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-LaTeX":{"title":"IEEE SEP Tools LaTeX","content":"[[IEEE Tools für dein SEP]]\n\n- Nicht Word benutzen\n- Jeder benutzt LaTeX\n- Funktioniert gut mit Git, aber Overleaf empfohlen\n- Fortgeschrittene Kenntnisse bei mindestens einem Mitglied\n- Für Seminar- / Bachelorarbeit auch notwendig\n- TeX-Studio\n- Weitere Infos\n\t- Overleaf Documentation\n- Kapitel in eigene TeX-Datei auslagern und einbinden mit `\\input`\n- Glossar Einträge auch wichtig","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-Markdown":{"title":"IEEE SEP Tools Markdown","content":"[[IEEE Tools für dein SEP]]\n\n- Wenn LaTeX übertrieben ist, empfiehlt sich Markdown\n- Pandoc für Export\n- HedgeDoc\n\t- Kollaborativer Markdown Editor\n\t- Kann auch einfache Präsentationen bauen\n\t- [Instanz](https://md.fachschaften.org)\n- MkDocs\n\t- Static Site Generator für Dokumentation\n\t  Baut statische Websites aus Markdown","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-Testing":{"title":"IEEE SEP Tools Testing","content":"[[IEEE Tools für dein SEP]]\n\n- Offizielle Testphase vom SEP ist gegen Ende\n\t- Unbedingt Software Testing VL hören\n- Unit Testing\n- Mutation Testing\n\t- Nicht allzu viel Aufwand das einzubauen\n\t- Aber grundsätzlich nicht notwendig\n- Web App Testing\n\t- Selenium\n- Tools\n\t- JUnit 5\n\t- AssertJ\n\t- Hamcrest\n\t- Mockito\n\t- PowerMock\n\t- PIT\n\t- Selenium\n- UML Diagramme\n\t- Klassendiagramm\n\t\t- IBM Rational-Software-Architect\n\t\t- **yatta UML Lab**\n\t\t\t- Unbedingt das nutzen, nicht IBM RSA\n\t\t- IntelliJ IDEA Ultimate Edition\n\t- ER-Diagramm, Sequenzdiagramm, GANTT-Diagramm, Pert-Chart, ...\n\t\t- draw.io\n\t\t\t- Bei Einbindung in LaTeX als PDF exportieren, dann automatische Skalierung\n\t\t- yED\n\t- Diagramme am besten gemeinsam am Beamer im Team erstellen\n\t\t- Bib-Räume\n\t\t- Seminarräume am Abend\n\t- Graphen erst ganz am Ende anordnen, nicht während der Arbeit\n- Test in CI sind am wichtigsten, da sie immer regelmäßig ausgeführt werden\n\t- Tests ignorieren ist keine Lösung","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-SEP-Tools-Versionsverwaltung-mit-Git":{"title":"IEEE SEP Tools Versionsverwaltung mit Git","content":"[[IEEE Tools für dein SEP]]\n\n- Tools\n\t- [tig](https://jonas.github.io/tig/) - History-Browser für Shell\n\t- Meld - Diff- und Merge Tool\n\t- GitKraken\n- Git features\n\t- `blame`\n\t- `cherry-pick`\n\t- `worktree`\n\t- `stash`\n\t- `bisect`\n- Tipps\n\t- `push --force` nur auf eigene Branches\n\t- Nichts mergen was nicht kompiliert oder getestet wurde","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]},"/SEP/IEEE-Tools-f%C3%BCr-dein-SEP":{"title":"IEEE Tools für dein SEP","content":"[[SEP]]\n\n- Allgemein\n\t- Infos zentral halten\n\t- Agendas für Team Treffen\n\t- Meetings protokollieren\n\t- [GitLab Handbook](https://about.gitlab.com/handbook/)\n- Kommunikation\n\t- Einbinden von GitLab-Push-Benachrichtigungen (in Discord)\n\t- [Mattermost](https://mattermost.fim.uni-passau.de)?\n\t\t- Hier auch Webhooks / Integrationen möglich\n\t- Dateiablage (für größere Dateien)\n\t\t- Sync+Share vom LRZ\n\t\t- OneDrive\n- Notizen\n\t- HedgeDoc\n\t\t- Öffentliche Instanz: md.fachschafen.org\n\t- Wiki-Feature von GitLab\n- [[IEEE SEP Tools Versionsverwaltung mit Git]]\n- [[IEEE SEP Tools Issue Tracker]]\n- [[IEEE SEP Tools Build-Systems]]\n- [[IEEE SEP Tools Continous Integration]]\n- [[IEEE SEP Tools IntelliJ]]\n- [[IEEE SEP Tools Testing]]\n- [[IEEE SEP Tools LaTeX]]\n\t- SEP Dokumente von vergangenen Semestern holen\n- [[IEEE SEP Tools Markdown]]\n\n[[IEEE Tools für dein SEP]]\n","lastmodified":"2023-07-13T20:14:35.905155237Z","tags":[]}}